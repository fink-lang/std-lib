{new} = import '@fink/js-interop/reflect'
{is_instance, get_type} = import '@fink/js-interop/reflect'
{String, TextEncoder, TextDecoder} = import '@fink/js-interop/globals'


from_char_codes = String.fromCharCode
from_code_points = String.fromCodePoint

char_code = fn str, idx: str.charCodeAt idx
code_point = fn str, idx: str.codePointAt idx


# TODO: support offsets?
ends_with = fn str, end, ...args: str.endsWith end, ...args
starts_with = fn str, end, ...args: str.startsWith end, ...args

slice = fn str, ...args: str.slice ...args


# TODO use string template: fmt`('_',3)${s}`
pad_start = fn str, target_len, pad_str: str.padStart target_len, pad_str
pad_end = fn str, target_len, pad_str: str.padEnd target_len, pad_str


# TODO could this be handled with '...' - whitespace in loxia?
trim = fn str: str.trim _
trim_start = fn str: str.trimStart _
trim_end = fn str: str.trimEnd _


# TODO should this be handled by '...' * 3 in loxia?
repeat = fn str, num: str.repeat num

lower_case = fn str: str.toLowerCase _
upper_case = fn str: str.toUpperCase _

raw = String.raw


encode = fn text, encoding:
  encoder = new TextEncoder, encoding
  encoder.encode text


decode = fn bytes, encoding:
  encoder = new TextDecoder, encoding
  encoder.decode bytes


is_str = fn str:
  match str:
    'string' == get_type ?: true
    is_instance ?, String: true
    else: false
